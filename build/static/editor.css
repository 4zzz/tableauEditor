.tableau {
	width: 100%;
	border-spacing: 0;
	border-collapse: collapse;
}

.formula {
	display: block;
}

.beta {
	width: 100%;
}

.formula > .beta {
	display: inline-flex;
}

.beta > .formula {
	display: inline-block;
	min-width: 20px;
	flex-grow: 1;
}

.formulaId {
	width: 10px;
}

.formulaInput {
	flex-grow: 1;
	width: calc(100% - 80px);
}

.formulaInputSubst {
	flex-grow: 1;
	width: calc(100% - 300px);
}

.substitutedVariable {
	width: 30px;
}

.substitutedConstant {
	width: 80px;
}

.formulaReference {
	width: 11px;
}

.formulaInput, .formulaReference .formulaInputSubst {
	text-align: center;
	background-color: inherit;
	border: 0;
	border-bottom: thin dashed lightgray;
}

.expandControls {
	text-align: center;
	display: block;
}

.actions button {
	margin: 0 0.5em;
}

.actions #importJson {
	display: none;
}

/** delete button */
button.delete {
	padding: 0 0.3em;
	border: thin solid lightgray;
	background-color: inherit;
	color: gray;
}
button.delete:hover {
	background-color: lightpink;
}

.premise { background-color: #def; }

.syntaxProblem    { background-color: lightpink; }
.semanticsProblem { background-color: rgb(255, 211, 131); }

.jsonImportError { background-color: lightpink; }

.rules {
	with: 100%;
}
.rule-wrapper {
	width: 50%;
	display: inline-grid;
}

.rulesHelp .rule {
	display: inline-block;
	padding: 0.5em;
	text-align: center;
	vertical-align: top;
}

p code {
	background-color: lightgray;
	padding: 0 0.2em;
}

/**
 * Print style.
 * Hide everything except the tableau.
 */

@media print {
	body > div > *:not(.tableau):not(.verdict):not(.problems),
	button.delete
	{
		display: none;
	}
	.formulaEdit, .refEdit {
		border-bottom: none;
	}
	/* Print color backgrounds for webkit browsers */
	body {
		-webkit-print-color-adjust: exact;
	}
}

/* vim: set sw=2 ts=2 sts=2 et : */
